
Bugs:

disasm.wren and boot.wren assumes little endian; maybe we need peek2

boot.wren could use * (i.e., peek_byte) in place of peek in a couple places

Try to eliminate get_xt (it adds c0 and isn't really necessary)

Look at uses of c0; see Sandboxing below

TBD

Sandboxing:

Consider converting from addresses to offsets everywhere inside the_store
 -- the exception would be CCALL addresses
 -- pay attention to PUSH_STRING which pushes an address now

Alternatively, check all peek and poke operations to be within the_store;
what other operations would need this check?

Replace assert() with something that longjmps to reset the world

Extending:

To add function locals (e.g., "let xxx : yyy in ...") we'd need an additional field
for the number of locals; it would be used along with arity to allocate and drop 
stack cells on function call and tail call. The locals would live after the
arguments on the stack. 

Now that we've moved the arity to the first byte of the function body in code space,
the locals counts can go in that same byte.


Readline support, e.g., https://github.com/Helius/microrl/network
(but microrl wants to prompt after every newline; need to be smarter)

===========================================================================


2018-10-07

cat boot.wren disasm.wren dasm_test.wren | ./wren

2018-10-07

after dictionary and header changes...

wren e$ cat boot.wren disasm.wren | ./wren
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > 

Library Loaded
2863 bytes (69%) remaining.
0
> > > > > > > > > 

Disassembler Loaded
1474 bytes (35%) remaining.
0
> 
wren e$ 

before dictionary and header changes...

wren e$ cat boot.wren disasm.wren | ./wren
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > 

Library Loaded
2847 bytes (69%) remaining.
0
> > > > > > > > > 

Disassembler Loaded
1372 bytes (33%) remaining.
0
> 
wren e$ 

wren e$ ./benchmark
> > 9227465
> 

real    0m0.449s
user    0m0.445s
sys 0m0.002s
wren e$ ./benchmark
> > 9227465
> 

real    0m0.449s
user    0m0.445s
sys 0m0.002s
wren e$ ./benchmark
> > 9227465
> 

real    0m0.452s
user    0m0.447s
sys 0m0.002s
wren e$ 

